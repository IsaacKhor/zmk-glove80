#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&lt { flavor = "balanced"; };

/ {
    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
    };

    behaviors {
        hrml: homerow_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 56 57 58 59 60 61 62 63 72 73 74 75 76 77 78 79 55>;
            hold-trigger-on-release;
        };

        hrmr: homerow_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 53 54 64 65 66 67 68 69 70 71>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none      &none          &none         &none         &none                                                                                                                    &none           &none         &none         &none          &none
&none      &kp N1         &kp N2        &kp N3        &kp N4          &kp N5                                                                                           &kp N6  &kp N7          &kp N8        &kp N9        &kp N0         &none
&kp TAB    &kp SQT        &kp COMMA     &kp DOT       &kp P           &kp Y                                                                                            &kp F   &kp G           &kp C         &kp R         &kp L          &kp SLASH
&kp ESC    &hrml LCTRL A  &hrml LALT O  &hrml LGUI E  &hrml LSHIFT U  &kp I                                                                                            &kp D   &hrmr RSHIFT H  &hrmr RGUI T  &hrmr RALT N  &hrmr RCTRL S  &kp MINUS
&kp LSHFT  &kp SEMI       &kp Q         &kp J         &kp K           &kp X   &kp SPACE   &none      &mo 5                 &none             &none      &kp BACKSPACE  &kp B   &kp M           &kp W         &kp V         &kp Z          &kp RSHFT
&mo 5      &none          &none         &kp LEFT      &kp RIGHT               &lt 1 BSPC  &lt 3 ESC  &kp LC(LA(LS(LGUI)))  &kp LC(LS(LALT))  &lt 4 RET  &lt 2 SPACE            &kp DOWN        &kp UP        &none         &none          &mo 5
            >;
        };

        number {
            bindings = <
&none  &none           &none          &none          &none                                                                     &none           &none          &none          &none           &none
&none  &none           &none          &none          &none           &none                                              &none  &none           &none          &none          &none           &none
&none  &none           &kp MINUS      &kp DOT        &kp FSLH        &none                                              &none  &kp PLUS        &kp STAR       &kp EQUAL      &none           &none
&none  &hrml LCTRL N6  &hrml LALT N2  &hrml LCMD N0  &hrml LSHFT N4  &none                                              &none  &hrmr RSHFT N5  &hrmr RCMD N1  &hrmr RALT N3  &hrmr RCTRL N7  &none
&none  &tog 1          &none          &none          &kp N8          &none  &none  &none  &none  &none  &none   &none   &none  &kp N9          &none          &none          &to 1           &none
&none  &none           &none          &none          &none                  &none  &none  &none  &none  &trans  &trans         &none           &none          &none          &none           &none
            >;
        };

        symbol {
            bindings = <
&none  &none                   &none                  &none                   &none                                                                          &none              &none                        &none                         &none              &none
&none  &none                   &none                  &none                   &none               &none                                               &none  &none              &none                        &none                         &none              &none
&none  &kp PLUS                &kp GRAVE              &kp TILDE               &kp HASH            &none                                               &none  &kp PRCNT          &kp LBKT                     &kp RBKT                      &kp EQUAL          &none
&none  &hrml LCTRL UNDERSCORE  &hrml LALT LEFT_BRACE  &hrml RCMD RIGHT_BRACE  &hrml LSHFT DOLLAR  &kp STAR                                            &none  &hrmr RSHFT MINUS  &hrmr RCMD LEFT_PARENTHESIS  &hrmr RALT RIGHT_PARENTHESIS  &hrmr RCTRL SLASH  &none
&none  &kp EXCL                &kp AMPS               &kp BSLH                &kp COLON           &none     &none  &none  &none  &none  &none  &none  &none  &kp QMARK          &kp PIPE                     &kp CARET                     &kp AT             &none
&none  &none                   &none                  &none                   &none                         &none  &none  &none  &none  &none  &none         &none              &none                        &none                         &none              &none
            >;
        };

        navigation {
            bindings = <
&none  &none   &none    &none    &none                                                                     &none             &none             &none             &none              &none
&none  &none   &none    &none    &none    &none                                                     &none  &none             &none             &none             &none              &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &kp F13                                                   &none  &kp LG(LC(LEFT))  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  &kp LG(RC(RIGHT))  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &kp F14                                                   &none  &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT          &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &kp F15  &trans  &none   &none   &none   &none   &trans   &none  &caps_word        &kp TAB           &none             &none              &none
&none  &none   &none    &none    &none             &trans  &trans  &trans  &trans  &trans  &kp DEL         &none             &none             &none             &none              &none
            >;
        };

        function {
            bindings = <
&none  &none                   &none                    &none                    &none                                                                            &none  &none  &none  &none  &none
&none  &none                   &none                    &none                    &none                    &none                                            &none  &none  &none  &none  &none  &none
&none  &kp LC(LS(LA(LG(F1))))  &kp LC(LS(LA(LG(F2))))   &kp LC(LS(LA(LG(F3))))   &kp LC(LS(LA(LG(F4))))   &none                                            &none  &none  &none  &none  &none  &none
&none  &kp LC(LS(LA(LG(F5))))  &kp LC(LS(LA(LG(F6))))   &kp LC(LS(LA(LG(F7))))   &kp LC(LS(LA(LG(F8))))   &none                                            &none  &none  &none  &none  &none  &none
&none  &kp LC(LS(LA(LG(F9))))  &kp LC(LS(LA(LG(F10))))  &kp LC(LS(LA(LG(F11))))  &kp LC(LS(LA(LG(F12))))  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none                   &none                    &none                    &none                           &none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        meta {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                          &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none                 &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI       &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD       &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &rgb_ug_status_macro  &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                                  &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
